name: CI

on:
  push:
    branches: [main]

jobs:
  setup:
    name: Set up environment
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-services.outputs.services }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set services matrix
        id: set-services
        run: |
          SERVICES=$(ls -d services/*/ | xargs -n1 basename | jq -R . | jq -s -c .)
          echo "Detected services: $SERVICES"
          echo "services=$SERVICES" >> $GITHUB_OUTPUT

  build-image:
    name: Build ${{ matrix.service }} image
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.setup.outputs.services) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@0.14.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"

      - name: Setup protoc
        uses: arduino/setup-protoc@v3

      - name: Install protoc-gen-go
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          echo "${HOME}/go/bin" >> $GITHUB_PATH

      - name: Generate protos
        run: make proto

      - name: Generate Bazel build files
        run: make bazel-gazelle

      - name: Build Docker image
        run: bazel run //services/${{ matrix.service }}:load

      - name: Save Docker image
        run: |
          IMAGE_NAME="vasapolrittideah/money-tracker-api-${{ matrix.service }}"
          docker save $IMAGE_NAME:latest -o ${IMAGE_NAME//\//_}.tar

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-${{ matrix.service }}
          path: vasapolrittideah_money-tracker-api-${{ matrix.service }}.tar

  push-image:
    name: Push ${{ matrix.service }} image
    needs: [setup, build-image]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.setup.outputs.services) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: image-${{ matrix.service }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Load Docker image
        run: |
          FILE="vasapolrittideah_money-tracker-api-${{ matrix.service }}.tar"
          docker load -i $FILE

      - name: Push Docker image
        run: |
          IMAGE="vasapolrittideah/money-tracker-api-${{ matrix.service }}:latest"
          docker push $IMAGE
